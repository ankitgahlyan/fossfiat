{"version":3,"file":"909.425f7d2af5d72d1cad8d.js","mappings":"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","sources":["webpack://mytonwallet/./node_modules/teslabot/dist/timer/backoff.js","webpack://mytonwallet/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack://mytonwallet/./node_modules/teslabot/dist/timer/delay.js","webpack://mytonwallet/./node_modules/teslabot/dist/timer/asyncTimeout.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/utils/ledgerWriter.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/InvalidateSync.js","webpack://mytonwallet/./node_modules/teslabot/dist/index.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/Queue.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/AsyncLock.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/utils/getInit.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/SyncValue.js","webpack://mytonwallet/./node_modules/teslabot/dist/iterator/createAsyncIterator.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/ConcurrencyPool.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/TonTransport.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBackoff = exports.exponentialBackoffDelay = void 0;\nconst delay_1 = require(\"./delay\");\nfunction exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount) {\n    let maxDelayRet = minDelay + ((maxDelay - minDelay) / maxFailureCount) * Math.max(currentFailureCount, maxFailureCount);\n    return Math.round(Math.random() * maxDelayRet);\n}\nexports.exponentialBackoffDelay = exponentialBackoffDelay;\nfunction createBackoff(opts) {\n    return (callback) => __awaiter(this, void 0, void 0, function* () {\n        let currentFailureCount = 0;\n        const minDelay = opts && opts.minDelay !== undefined ? opts.minDelay : 250;\n        const maxDelay = opts && opts.maxDelay !== undefined ? opts.maxDelay : 1000;\n        const maxFailureCount = opts && opts.maxFailureCount !== undefined ? opts.maxFailureCount : 50;\n        while (true) {\n            try {\n                return yield callback();\n            }\n            catch (e) {\n                if (currentFailureCount < maxFailureCount) {\n                    currentFailureCount++;\n                }\n                if (opts && opts.onError) {\n                    opts.onError(e, currentFailureCount);\n                }\n                let waitForRequest = exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount);\n                yield (0, delay_1.delay)(waitForRequest);\n            }\n        }\n    });\n}\nexports.createBackoff = createBackoff;\n//# sourceMappingURL=backoff.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from \"@ledgerhq/errors\";\nimport { LocalTracer } from \"@ledgerhq/logs\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nclass Transport {\n    constructor({ context, logType } = {}) {\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new EventEmitter();\n        /**\n         * Send data to the device using the higher level API.\n         *\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @param {Object} options - Contains optional options for the exchange function\n         *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n         *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */\n        this.send = (cla_1, ins_1, p1_1, p2_1, ...args_1) => __awaiter(this, [cla_1, ins_1, p1_1, p2_1, ...args_1], void 0, function* (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK], { abortTimeoutMs } = {}) {\n            const tracer = this.tracer.withUpdatedContext({ function: \"send\" });\n            if (data.length >= 256) {\n                tracer.trace(\"data.length exceeded 256 bytes limit\", { dataLength: data.length });\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n            }\n            tracer.trace(\"Starting an exchange\", { abortTimeoutMs });\n            const response = yield this.exchange(\n            // The size of the data is added in 1 byte just before `data`\n            Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]), { abortTimeoutMs });\n            tracer.trace(\"Received response from exchange\");\n            const sw = response.readUInt16BE(response.length - 2);\n            if (!statusList.some(s => s === sw)) {\n                throw new TransportStatusError(sw);\n            }\n            return response;\n        });\n        this._appAPIlock = null;\n        this.tracer = new LocalTracer(logType !== null && logType !== void 0 ? logType : DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */\n    exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = () => {\n            unsubscribed = true;\n        };\n        const main = () => __awaiter(this, void 0, void 0, function* () {\n            if (unsubscribed)\n                return;\n            for (const apdu of apdus) {\n                const r = yield this.exchange(apdu);\n                if (unsubscribed)\n                    return;\n                const status = r.readUInt16BE(r.length - 2);\n                if (status !== StatusCodes.OK) {\n                    throw new TransportStatusError(status);\n                }\n                observer.next(r);\n            }\n        });\n        main().then(() => !unsubscribed && observer.complete(), e => !unsubscribed && observer.error(e));\n        return { unsubscribe };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */\n    setScrambleKey(_key) { }\n    /**\n     * Close the connection with the device.\n     *\n     * Note: for certain transports (hw-transport-node-hid-singleton for ex), once the promise resolved,\n     * the transport instance is actually still cached, and the device is disconnected only after a defined timeout.\n     * But for the consumer of the Transport, this does not matter and it can consider the transport to be closed.\n     *\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */\n    close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */\n    on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */\n    off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */\n    setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */\n    setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */\n    setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */\n    static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject) => {\n            let found = false;\n            const sub = this.listen({\n                next: e => {\n                    found = true;\n                    if (sub)\n                        sub.unsubscribe();\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: e => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: () => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                },\n            });\n            const listenTimeoutId = listenTimeout\n                ? setTimeout(() => {\n                    sub.unsubscribe();\n                    reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n                }, listenTimeout)\n                : null;\n        });\n    }\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */\n    exchangeAtomicImpl(f) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({\n                function: \"exchangeAtomicImpl\",\n                unresponsiveTimeout: this.unresponsiveTimeout,\n            });\n            if (this.exchangeBusyPromise) {\n                tracer.trace(\"Atomic exchange is already busy\");\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n            }\n            // Sets the atomic guard\n            let resolveBusy;\n            const busyPromise = new Promise(r => {\n                resolveBusy = r;\n            });\n            this.exchangeBusyPromise = busyPromise;\n            // The device unresponsiveness handler\n            let unresponsiveReached = false;\n            const timeout = setTimeout(() => {\n                tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                    unresponsiveTimeout: this.unresponsiveTimeout,\n                });\n                unresponsiveReached = true;\n                this.emit(\"unresponsive\");\n            }, this.unresponsiveTimeout);\n            try {\n                const res = yield f();\n                if (unresponsiveReached) {\n                    tracer.trace(\"Device was unresponsive, emitting responsive\");\n                    this.emit(\"responsive\");\n                }\n                return res;\n            }\n            finally {\n                tracer.trace(\"Finalize, clearing busy guard\");\n                clearTimeout(timeout);\n                if (resolveBusy)\n                    resolveBusy();\n                this.exchangeBusyPromise = null;\n            }\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods) {\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args) => __awaiter(this, void 0, void 0, function* () {\n            const { _appAPIlock } = this;\n            if (_appAPIlock) {\n                return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n            }\n            try {\n                this._appAPIlock = methodName;\n                this.setScrambleKey(scrambleKey);\n                return yield f.apply(ctx, args);\n            }\n            finally {\n                this._appAPIlock = null;\n            }\n        });\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */\n    updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */\n    getTraceContext() {\n        return this.tracer.getContext();\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\nexport default Transport;\n//# sourceMappingURL=Transport.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.minimumDelay = exports.delay = void 0;\nfunction delay(ms) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    });\n}\nexports.delay = delay;\nfunction minimumDelay(ms, src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let start = Date.now();\n        let r = yield src;\n        let d = ms - (Date.now() - start);\n        if (d > 0) {\n            yield delay(d);\n        }\n        return r;\n    });\n}\nexports.minimumDelay = minimumDelay;\n//# sourceMappingURL=delay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncTimeout = void 0;\nfunction asyncTimeout(src, timeout) {\n    return new Promise((resolve, reject) => {\n        // Callbacks\n        let timer = null;\n        function abort(err) {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            reject(err);\n        }\n        function complete(value) {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve(value);\n        }\n        // Timeout\n        timer = setTimeout(() => {\n            abort(new Error('Request timeout'));\n        }, timeout);\n        // Source\n        src.then(complete);\n        src.catch(abort);\n    });\n}\nexports.asyncTimeout = asyncTimeout;\n//# sourceMappingURL=asyncTimeout.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeCellInline = exports.writeCellRef = exports.writeAddress = exports.writeUint8 = exports.writeVarUInt = exports.writeUint64 = exports.writeUint48 = exports.writeUint16 = exports.writeUint32 = void 0;\nconst core_1 = require(\"@ton/core\");\nfunction writeUint32(value) {\n    let b = Buffer.alloc(4);\n    b.writeUint32BE(value, 0);\n    return b;\n}\nexports.writeUint32 = writeUint32;\nfunction writeUint16(value) {\n    let b = Buffer.alloc(2);\n    b.writeUint16BE(value, 0);\n    return b;\n}\nexports.writeUint16 = writeUint16;\nfunction writeUint48(value) {\n    let b = Buffer.alloc(6);\n    b.writeUint16BE(value >> 32, 0);\n    b.writeUint32BE(value & ((1 << 32) - 1), 2);\n    return b;\n}\nexports.writeUint48 = writeUint48;\nfunction writeUint64(value) {\n    return (0, core_1.beginCell)().storeUint(value, 64).endCell().beginParse().loadBuffer(8);\n}\nexports.writeUint64 = writeUint64;\nfunction writeVarUInt(value) {\n    const sizeBytes = value === 0n ? 0 : Math.ceil((value.toString(2).length) / 8);\n    return (0, core_1.beginCell)().storeUint(sizeBytes, 8).storeUint(value, sizeBytes * 8).endCell().beginParse().loadBuffer(1 + sizeBytes);\n}\nexports.writeVarUInt = writeVarUInt;\nfunction writeUint8(value) {\n    let b = Buffer.alloc(1);\n    b[0] = value;\n    return b;\n}\nexports.writeUint8 = writeUint8;\nfunction writeAddress(address) {\n    return Buffer.concat([\n        writeUint8(address.workChain === -1 ? 0xff : address.workChain),\n        address.hash\n    ]);\n}\nexports.writeAddress = writeAddress;\nfunction writeCellRef(ref) {\n    return Buffer.concat([\n        writeUint16(ref.depth()),\n        ref.hash()\n    ]);\n}\nexports.writeCellRef = writeCellRef;\nfunction writeCellInline(bytes) {\n    return Buffer.concat([\n        writeUint8(bytes.length),\n        bytes,\n    ]);\n}\nexports.writeCellInline = writeCellInline;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidateSync = void 0;\nconst backoff_1 = require(\"../timer/backoff\");\nclass InvalidateSync {\n    constructor(command, opts) {\n        this._invalidated = false;\n        this._invalidatedDouble = false;\n        this._stopped = false;\n        this._doSync = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._backoff(() => __awaiter(this, void 0, void 0, function* () {\n                if (this._stopped) {\n                    return;\n                }\n                yield this._command();\n            }));\n            if (this._stopped) {\n                return;\n            }\n            if (this._invalidatedDouble) {\n                this._invalidatedDouble = false;\n                this._doSync();\n            }\n            else {\n                this._invalidated = false;\n            }\n        });\n        this._backoff = opts && opts.backoff ? opts.backoff : (0, backoff_1.createBackoff)();\n        this._command = command;\n    }\n    invalidate() {\n        if (this._stopped) {\n            return;\n        }\n        if (!this._invalidated) {\n            this._invalidated = true;\n            this._invalidatedDouble = false;\n            this._doSync();\n        }\n        if (!this._invalidatedDouble) {\n            this._invalidatedDouble = true;\n        }\n    }\n    stop() {\n        if (this._stopped) {\n            return;\n        }\n        this._stopped = true;\n    }\n}\nexports.InvalidateSync = InvalidateSync;\n//# sourceMappingURL=InvalidateSync.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncTimeout = exports.minimumDelay = exports.delay = exports.exponentialBackoffDelay = exports.createBackoff = exports.BoundedConcurrencyPool = exports.UnboundedConcurrencyPool = exports.Queue = exports.SyncValue = exports.InvalidateSync = exports.AsyncLock = exports.createAsyncIterator = void 0;\nvar createAsyncIterator_1 = require(\"./iterator/createAsyncIterator\");\nObject.defineProperty(exports, \"createAsyncIterator\", { enumerable: true, get: function () { return createAsyncIterator_1.createAsyncIterator; } });\nvar AsyncLock_1 = require(\"./sync/AsyncLock\");\nObject.defineProperty(exports, \"AsyncLock\", { enumerable: true, get: function () { return AsyncLock_1.AsyncLock; } });\nvar InvalidateSync_1 = require(\"./sync/InvalidateSync\");\nObject.defineProperty(exports, \"InvalidateSync\", { enumerable: true, get: function () { return InvalidateSync_1.InvalidateSync; } });\nvar SyncValue_1 = require(\"./sync/SyncValue\");\nObject.defineProperty(exports, \"SyncValue\", { enumerable: true, get: function () { return SyncValue_1.SyncValue; } });\nvar Queue_1 = require(\"./sync/Queue\");\nObject.defineProperty(exports, \"Queue\", { enumerable: true, get: function () { return Queue_1.Queue; } });\nvar ConcurrencyPool_1 = require(\"./sync/ConcurrencyPool\");\nObject.defineProperty(exports, \"UnboundedConcurrencyPool\", { enumerable: true, get: function () { return ConcurrencyPool_1.UnboundedConcurrencyPool; } });\nObject.defineProperty(exports, \"BoundedConcurrencyPool\", { enumerable: true, get: function () { return ConcurrencyPool_1.BoundedConcurrencyPool; } });\nvar backoff_1 = require(\"./timer/backoff\");\nObject.defineProperty(exports, \"createBackoff\", { enumerable: true, get: function () { return backoff_1.createBackoff; } });\nObject.defineProperty(exports, \"exponentialBackoffDelay\", { enumerable: true, get: function () { return backoff_1.exponentialBackoffDelay; } });\nvar delay_1 = require(\"./timer/delay\");\nObject.defineProperty(exports, \"delay\", { enumerable: true, get: function () { return delay_1.delay; } });\nObject.defineProperty(exports, \"minimumDelay\", { enumerable: true, get: function () { return delay_1.minimumDelay; } });\nvar asyncTimeout_1 = require(\"./timer/asyncTimeout\");\nObject.defineProperty(exports, \"asyncTimeout\", { enumerable: true, get: function () { return asyncTimeout_1.asyncTimeout; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\nclass Queue {\n    constructor() {\n        this.q = [];\n        this.awaiters = [];\n        this.push = (item) => {\n            // If queue is not empty\n            if (this.q.length > 0) {\n                this.q.push(item);\n                return;\n            }\n            // If queue is empty and there are awaiters\n            if (this.awaiters.length > 0) {\n                this.awaiters.shift()(item);\n                return;\n            }\n            // No awaiters and not empty queue\n            this.q.push(item);\n        };\n        this.get = () => __awaiter(this, void 0, void 0, function* () {\n            if (this.q.length > 0) {\n                return this.q.shift();\n            }\n            return yield new Promise((resolver) => this.awaiters.push(resolver));\n        });\n        this.getOptional = () => {\n            if (this.q.length > 0) {\n                return this.q.shift();\n            }\n            else {\n                return null;\n            }\n        };\n    }\n    get isEmpty() {\n        return this.q.length === 0;\n    }\n}\nexports.Queue = Queue;\n//# sourceMappingURL=Queue.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncLock = void 0;\nclass AsyncLock {\n    constructor() {\n        this.permits = 1;\n        this.promiseResolverQueue = [];\n    }\n    inLock(func) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.lock();\n                return yield func();\n            }\n            finally {\n                this.unlock();\n            }\n        });\n    }\n    lock() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.permits > 0) {\n                this.permits = this.permits - 1;\n                return;\n            }\n            yield new Promise(resolve => this.promiseResolverQueue.push(resolve));\n        });\n    }\n    unlock() {\n        this.permits += 1;\n        if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n            throw new Error('this.permits should never be > 0 when there is someone waiting.');\n        }\n        else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n            // If there is someone else waiting, immediately consume the permit that was released\n            // at the beginning of this function and let the waiting function resume.\n            this.permits -= 1;\n            const nextResolver = this.promiseResolverQueue.shift();\n            // Resolve on the next tick\n            if (nextResolver) {\n                setTimeout(() => {\n                    nextResolver(true);\n                }, 0);\n            }\n        }\n    }\n}\nexports.AsyncLock = AsyncLock;\n//# sourceMappingURL=AsyncLock.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInit = void 0;\nconst core_1 = require(\"@ton/core\");\nfunction getInit(publicKey, subwalletId, isV3R2) {\n    let data = (0, core_1.beginCell)()\n        .storeUint(0, 32) // Seqno\n        .storeUint(subwalletId, 32)\n        .storeBuffer(publicKey);\n    return {\n        code: isV3R2 ? core_1.Cell.fromBase64('te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=') : core_1.Cell.fromBase64('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA=='),\n        data: isV3R2 ? data.endCell() : data.storeBit(0).endCell(),\n    };\n}\nexports.getInit = getInit;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncValue = void 0;\nconst InvalidateSync_1 = require(\"./InvalidateSync\");\nclass SyncValue {\n    constructor(initial, updater, opts) {\n        this._value = initial;\n        this._updater = updater;\n        this._sync = new InvalidateSync_1.InvalidateSync(() => __awaiter(this, void 0, void 0, function* () {\n            yield this._updater(this._value);\n        }), opts);\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (!Object.is(v, this._value)) {\n            this._value = v;\n            this._sync.invalidate();\n        }\n    }\n}\nexports.SyncValue = SyncValue;\n//# sourceMappingURL=SyncValue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncIterator = void 0;\nfunction createAsyncIterator(onExit) {\n    let events = [];\n    let resolvers = [];\n    const getValue = () => {\n        return new Promise((resolve => {\n            if (events.length > 0) {\n                let val = events.shift();\n                if (val === null) {\n                    resolve({ value: undefined, done: true });\n                }\n                else {\n                    resolve({ value: val, done: false });\n                }\n            }\n            else {\n                resolvers.push(resolve);\n            }\n        }));\n    };\n    let onReturn = () => {\n        events = [];\n        resolvers = [];\n        onExit();\n        return Promise.resolve({ value: undefined, done: true });\n    };\n    return {\n        [Symbol.asyncIterator]() {\n            return {\n                next() {\n                    return getValue();\n                },\n                return: onReturn,\n                throw(error) {\n                    return Promise.reject(error);\n                }\n            };\n        },\n        push(data) {\n            if (resolvers.length > 0) {\n                resolvers.shift()({\n                    value: data,\n                    done: false\n                });\n            }\n            else {\n                events.push(data);\n            }\n        },\n        complete() {\n            if (resolvers.length > 0) {\n                resolvers.shift()({\n                    value: null,\n                    done: true\n                });\n            }\n            else {\n                events.push(null);\n            }\n        }\n    };\n}\nexports.createAsyncIterator = createAsyncIterator;\n//# sourceMappingURL=createAsyncIterator.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _BoundedConcurrencyPool_inFlight;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoundedConcurrencyPool = exports.UnboundedConcurrencyPool = void 0;\nexports.UnboundedConcurrencyPool = {\n    run: (src) => {\n        return src();\n    }\n};\nclass BoundedConcurrencyPool {\n    constructor(concurrencyFactor) {\n        this.pending = [];\n        _BoundedConcurrencyPool_inFlight.set(this, 0);\n        if (typeof concurrencyFactor === 'number') {\n            this.concurrencyFactor = () => concurrencyFactor;\n        }\n        else {\n            this.concurrencyFactor = concurrencyFactor;\n        }\n    }\n    run(src) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (__classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\") >= this.concurrencyFactor()) {\n                yield new Promise((resolve) => this.pending.push(resolve));\n            }\n            __classPrivateFieldSet(this, _BoundedConcurrencyPool_inFlight, (_a = __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\"), _a++, _a), \"f\");\n            try {\n                let res = yield src();\n                return res;\n            }\n            finally {\n                __classPrivateFieldSet(this, _BoundedConcurrencyPool_inFlight, (_b = __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\"), _b--, _b), \"f\");\n                if (this.pending.length > 0) {\n                    let p = this.pending[0];\n                    this.pending.shift();\n                    p();\n                }\n            }\n        });\n    }\n    get inFlight() {\n        return __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\");\n    }\n    get inQueue() {\n        return this.pending.length;\n    }\n}\nexports.BoundedConcurrencyPool = BoundedConcurrencyPool;\n_BoundedConcurrencyPool_inFlight = new WeakMap();\n//# sourceMappingURL=ConcurrencyPool.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonTransport = exports.parseMessage = exports.KNOWN_JETTONS = void 0;\nconst core_1 = require(\"@ton/core\");\nconst crypto_1 = require(\"@ton/crypto\");\nconst teslabot_1 = require(\"teslabot\");\nconst ledgerWriter_1 = require(\"./utils/ledgerWriter\");\nconst getInit_1 = require(\"./utils/getInit\");\nconst LEDGER_SYSTEM = 0xB0;\nconst LEDGER_CLA = 0xe0;\nconst INS_VERSION = 0x03;\nconst INS_ADDRESS = 0x05;\nconst INS_SIGN_TX = 0x06;\nconst INS_PROOF = 0x08;\nconst INS_SIGN_DATA = 0x09;\nconst INS_SETTINGS = 0x0A;\nconst DEFAULT_SUBWALLET_ID = 698983191;\nexports.KNOWN_JETTONS = [\n    {\n        symbol: 'USDT',\n        masterAddress: core_1.Address.parse('EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs'),\n    },\n    {\n        symbol: 'NOT',\n        masterAddress: core_1.Address.parse('EQAvlWFDxGF2lXm67y4yzC17wYKD9A0guwPkMs1gOsM__NOT'),\n    },\n    {\n        symbol: 'tsTON',\n        masterAddress: core_1.Address.parse('EQC98_qAmNEptUtPc7W6xdHh_ZHrBUFpw5Ft_IzNU20QAJav'),\n    },\n    {\n        symbol: 'wsTON',\n        masterAddress: core_1.Address.parse('EQB0SoxuGDx5qjVt0P_bPICFeWdFLBmVopHhjgfs0q-wsTON'),\n    },\n    {\n        symbol: 'hTON',\n        masterAddress: core_1.Address.parse('EQDPdq8xjAhytYqfGSX8KcFWIReCufsB9Wdg0pLlYSO_h76w'),\n    },\n    {\n        symbol: 'stTON',\n        masterAddress: core_1.Address.parse('EQDNhy-nxYFgUqzfUzImBEP67JqsyMIcyk2S5_RwNNEYku0k'),\n    },\n    {\n        symbol: 'STAKED',\n        masterAddress: core_1.Address.parse('EQCqC6EhRJ_tpWngKxL6dV0k6DSnRUrs9GSVkLbfdCqsj6TE'),\n    },\n];\nconst dnsWalletKey = Buffer.from([0xe8, 0xd4, 0x40, 0x50, 0x87, 0x3d, 0xba, 0x86, 0x5a, 0xa7, 0xc1, 0x70, 0xab, 0x4c, 0xce, 0x64,\n    0xd9, 0x08, 0x39, 0xa3, 0x4d, 0xcf, 0xd6, 0xcf, 0x71, 0xd1, 0x4e, 0x02, 0x05, 0x44, 0x3b, 0x1b]);\nfunction normalizeQueryId(qid) {\n    return qid === 0n ? null : qid;\n}\nfunction parseMessage(cell, opts) {\n    const params = {\n        disallowUnsafe: false,\n        disallowModification: false,\n        encodeJettonBurnEthAddressAsHex: true,\n        ...opts,\n    };\n    if (cell.hash().equals(new core_1.Cell().hash())) {\n        return undefined;\n    }\n    let s = cell.beginParse();\n    try {\n        const op = s.loadUint(32);\n        switch (op) {\n            case 0: {\n                const str = s.loadStringTail();\n                s.endParse();\n                if (str.length > 120) {\n                    throw new Error('Comment must be at most 120 ASCII characters long');\n                }\n                for (const c of str) {\n                    if (c.charCodeAt(0) < 0x20 || c.charCodeAt(0) >= 0x7f) {\n                        throw new Error('Comment must only contain printable ASCII characters');\n                    }\n                }\n                return {\n                    type: 'comment',\n                    text: str,\n                };\n            }\n            case 0x0f8a7ea5: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                const destination = s.loadAddress();\n                const responseDestination = s.loadAddress();\n                const customPayload = s.loadMaybeRef();\n                const forwardAmount = s.loadCoins();\n                let forwardPayload = null;\n                if (s.loadBit()) {\n                    forwardPayload = s.loadRef();\n                }\n                else {\n                    const p = s.asCell();\n                    s = new core_1.Cell().beginParse(); // clear the slice\n                    if (!p.hash().equals(new core_1.Cell().hash())) {\n                        if (params.disallowModification) {\n                            throw new Error('Jetton transfer message would be modified');\n                        }\n                        forwardPayload = p;\n                    }\n                }\n                s.endParse();\n                return {\n                    type: 'jetton-transfer',\n                    queryId,\n                    amount,\n                    destination,\n                    responseDestination,\n                    customPayload,\n                    forwardAmount,\n                    forwardPayload,\n                    knownJetton: null,\n                };\n            }\n            case 0x5fcc3d14: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const newOwner = s.loadAddress();\n                const responseDestination = s.loadAddress();\n                const customPayload = s.loadMaybeRef();\n                const forwardAmount = s.loadCoins();\n                let forwardPayload = null;\n                if (s.loadBit()) {\n                    forwardPayload = s.loadRef();\n                }\n                else {\n                    const p = s.asCell();\n                    s = new core_1.Cell().beginParse(); // clear the slice\n                    if (!p.hash().equals(new core_1.Cell().hash())) {\n                        if (params.disallowModification) {\n                            throw new Error('Jetton transfer message would be modified');\n                        }\n                        forwardPayload = p;\n                    }\n                }\n                s.endParse();\n                return {\n                    type: 'nft-transfer',\n                    queryId,\n                    newOwner,\n                    responseDestination,\n                    customPayload,\n                    forwardAmount,\n                    forwardPayload,\n                };\n            }\n            case 0x595f07bc: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                const responseDestination = s.loadAddress();\n                let customPayload = s.loadMaybeRef();\n                s.endParse();\n                if (params.encodeJettonBurnEthAddressAsHex && customPayload !== null && customPayload.bits.length === 160 && customPayload.refs.length === 0) {\n                    const cs = customPayload.beginParse();\n                    customPayload = cs.loadBuffer(20);\n                    cs.endParse();\n                }\n                return {\n                    type: 'jetton-burn',\n                    queryId,\n                    amount,\n                    responseDestination,\n                    customPayload,\n                };\n            }\n            case 0x7258a69b: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const address = s.loadAddress();\n                s.endParse();\n                return {\n                    type: 'add-whitelist',\n                    queryId,\n                    address,\n                };\n            }\n            case 0x1000: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                s.endParse();\n                return {\n                    type: 'single-nominator-withdraw',\n                    queryId,\n                    amount,\n                };\n            }\n            case 0x1001: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const address = s.loadAddress();\n                s.endParse();\n                return {\n                    type: 'single-nominator-change-validator',\n                    queryId,\n                    address,\n                };\n            }\n            case 0x47d54391: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                let appId = null;\n                if (s.remainingBits > 0) {\n                    appId = s.loadUintBig(64);\n                }\n                s.endParse();\n                return {\n                    type: 'tonstakers-deposit',\n                    queryId,\n                    appId,\n                };\n            }\n            case 0x69fb306c: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const votingAddress = s.loadAddress();\n                const expirationDate = s.loadUint(48);\n                const vote = s.loadBit();\n                const needConfirmation = s.loadBit();\n                s.endParse();\n                return {\n                    type: 'vote-for-proposal',\n                    queryId,\n                    votingAddress,\n                    expirationDate,\n                    vote,\n                    needConfirmation,\n                };\n            }\n            case 0x4eb1f0f9: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const key = s.loadBuffer(32);\n                if (key.equals(dnsWalletKey)) {\n                    if (s.remainingRefs > 0) {\n                        const vs = s.loadRef().beginParse();\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (!s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        const type = vs.loadUint(16);\n                        if (type !== 0x9fd3) {\n                            throw new Error('Wrong DNS record type');\n                        }\n                        const address = vs.loadAddress();\n                        const flags = vs.loadUint(8);\n                        if (flags > 1) {\n                            throw new Error('DNS wallet record must have flags 0 or 1');\n                        }\n                        let capabilities = (flags & 1) > 0 ? { isWallet: false } : null;\n                        if (capabilities !== null) {\n                            while (vs.loadBit()) {\n                                const cap = vs.loadUint(16);\n                                if (cap === 0x2177) {\n                                    if (capabilities.isWallet && params.disallowModification) {\n                                        throw new Error('DNS change record message would be modified');\n                                    }\n                                    capabilities.isWallet = true;\n                                }\n                                else {\n                                    throw new Error('Unknown DNS wallet record capability');\n                                }\n                            }\n                        }\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'wallet',\n                                value: {\n                                    address,\n                                    capabilities,\n                                },\n                            },\n                        };\n                    }\n                    else {\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'wallet',\n                                value: null,\n                            },\n                        };\n                    }\n                }\n                else {\n                    if (s.remainingRefs > 0) {\n                        const value = s.loadRef();\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (!s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'unknown',\n                                key,\n                                value,\n                            },\n                        };\n                    }\n                    else {\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'unknown',\n                                key,\n                                value: null,\n                            },\n                        };\n                    }\n                }\n            }\n            case 0x8: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const swapId = s.loadBuffer(32);\n                s.endParse();\n                return {\n                    type: 'token-bridge-pay-swap',\n                    queryId,\n                    swapId,\n                };\n            }\n        }\n        throw new Error('Unknown op: ' + op);\n    }\n    catch (e) {\n        if (params.disallowUnsafe) {\n            throw e;\n        }\n    }\n    return {\n        type: 'unsafe',\n        message: cell,\n    };\n}\nexports.parseMessage = parseMessage;\nfunction chunks(buf, n) {\n    const nc = Math.ceil(buf.length / n);\n    const cs = [];\n    for (let i = 0; i < nc; i++) {\n        cs.push(buf.subarray(i * n, (i + 1) * n));\n    }\n    return cs;\n}\nfunction processAddressFlags(opts) {\n    const bounceable = opts?.bounceable ?? true;\n    const testOnly = opts?.testOnly ?? false;\n    const chain = opts?.chain ?? 0;\n    const subwalletId = opts?.subwalletId ?? 698983191;\n    const walletVersion = opts?.walletVersion ?? 'v4';\n    let specifiers = undefined;\n    let flags = 0x00;\n    if (testOnly) {\n        flags |= 0x01;\n    }\n    if (chain === -1) {\n        flags |= 0x02;\n    }\n    if (subwalletId !== 698983191 || walletVersion !== 'v4') {\n        flags |= 0x04;\n        specifiers = {\n            subwalletId,\n            isV3R2: walletVersion === 'v3r2',\n        };\n    }\n    return { bounceable, testOnly, chain, flags, specifiers };\n}\nfunction convertPayload(input) {\n    let payload = null;\n    let hints = Buffer.concat([(0, ledgerWriter_1.writeUint8)(0)]);\n    if (input === undefined) {\n        return {\n            payload,\n            hints,\n        };\n    }\n    switch (input.type) {\n        case 'unsafe': {\n            payload = input.message;\n            break;\n        }\n        case 'comment': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x00),\n                (0, ledgerWriter_1.writeUint16)(Buffer.from(input.text).length),\n                Buffer.from(input.text)\n            ]);\n            payload = (0, core_1.beginCell)()\n                .storeUint(0, 32)\n                .storeBuffer(Buffer.from(input.text))\n                .endCell();\n            break;\n        }\n        case 'jetton-transfer':\n        case 'nft-transfer': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(input.type === 'jetton-transfer' ? 0x01 : 0x02)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(input.type === 'jetton-transfer' ? 0x0f8a7ea5 : 0x5fcc3d14, 32);\n            let d = Buffer.alloc(0);\n            let flags = 0;\n            if (input.queryId !== null) {\n                flags |= 1;\n            }\n            if (input.type === 'jetton-transfer' && input.knownJetton !== null) {\n                flags |= 2;\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(flags)]);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                b = b.storeUint(0, 64);\n            }\n            if (input.type === 'jetton-transfer') {\n                if (input.knownJetton !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeUint16)(input.knownJetton.jettonId), (0, ledgerWriter_1.writeUint8)(input.knownJetton.workchain)]);\n                }\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n                b = b.storeCoins(input.amount);\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.destination)]);\n                b = b.storeAddress(input.destination);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.newOwner)]);\n                b = b.storeAddress(input.newOwner);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.responseDestination)]);\n            b = b.storeAddress(input.responseDestination);\n            if (input.customPayload !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.customPayload)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.forwardAmount)]);\n            b = b.storeCoins(input.forwardAmount);\n            if (input.forwardPayload !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.forwardPayload)]);\n                b = b.storeMaybeRef(input.forwardPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.forwardPayload);\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'jetton-burn': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x03)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x595f07bc, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n            b = b.storeCoins(input.amount);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.responseDestination)]);\n            b = b.storeAddress(input.responseDestination);\n            if (input.customPayload === null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else if (input.customPayload instanceof core_1.Cell) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.customPayload)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(2), (0, ledgerWriter_1.writeCellInline)(input.customPayload)]);\n                b = b.storeMaybeRef((0, core_1.beginCell)().storeBuffer(input.customPayload).endCell());\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'add-whitelist':\n        case 'single-nominator-change-validator': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(input.type === 'add-whitelist' ? 0x04 : 0x06)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(input.type === 'add-whitelist' ? 0x7258a69b : 0x1001, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.address)]);\n            b = b.storeAddress(input.address);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'single-nominator-withdraw': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x05)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x1000, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n            b = b.storeCoins(input.amount);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'tonstakers-deposit': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x07)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x47d54391, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.appId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.appId)]);\n                b = b.storeUint(input.appId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'vote-for-proposal': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x08)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x69fb306c, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.votingAddress)]);\n            b = b.storeAddress(input.votingAddress);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint48)(input.expirationDate)]);\n            b = b.storeUint(input.expirationDate, 48);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.vote ? 1 : 0), (0, ledgerWriter_1.writeUint8)(input.needConfirmation ? 1 : 0)]);\n            b = b.storeBit(input.vote).storeBit(input.needConfirmation);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'change-dns-record': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x09)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x4eb1f0f9, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.record.type === 'unknown' && input.record.key.length !== 32) {\n                throw new Error('DNS record key length must be 32 bytes long');\n            }\n            b = b.storeBuffer(input.record.type === 'wallet' ? (0, crypto_1.sha256_sync)('wallet') : input.record.key);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.record.value === null ? 0 : 1), (0, ledgerWriter_1.writeUint8)(input.record.type === 'wallet' ? 0 : 1)]);\n            if (input.record.type === 'wallet') {\n                if (input.record.value !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.record.value.address), (0, ledgerWriter_1.writeUint8)(input.record.value.capabilities === null ? 0 : 1)]);\n                    let rb = (0, core_1.beginCell)().storeUint(0x9fd3, 16).storeAddress(input.record.value.address).storeUint(input.record.value.capabilities === null ? 0 : 1, 8);\n                    if (input.record.value.capabilities !== null) {\n                        d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.record.value.capabilities.isWallet ? 1 : 0)]);\n                        if (input.record.value.capabilities.isWallet) {\n                            rb = rb.storeBit(true).storeUint(0x2177, 16);\n                        }\n                        rb = rb.storeBit(false);\n                    }\n                    b = b.storeRef(rb);\n                }\n            }\n            else {\n                d = Buffer.concat([d, input.record.key]);\n                if (input.record.value !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeCellRef)(input.record.value)]);\n                    b = b.storeRef(input.record.value);\n                }\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'token-bridge-pay-swap': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x0A)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(8, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.swapId.length !== 32) {\n                throw new Error('Token bridge swap ID must be 32 bytes long');\n            }\n            d = Buffer.concat([d, input.swapId]);\n            b = b.storeBuffer(input.swapId);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        default: {\n            throw new Error('Unknown payload type: ' + input.type);\n        }\n    }\n    return {\n        payload,\n        hints,\n    };\n}\nclass TonTransport {\n    transport;\n    #lock = new teslabot_1.AsyncLock();\n    constructor(transport) {\n        this.transport = transport;\n    }\n    //\n    // Apps\n    //\n    async #getCurrentApp() {\n        return this.#lock.inLock(async () => {\n            let r = await this.transport.send(LEDGER_SYSTEM, 0x01, 0x00, 0x00, undefined, [0x9000]);\n            let data = r.slice(0, r.length - 2);\n            if (data[0] !== 0x01) {\n                throw Error('Invalid response');\n            }\n            let nameLength = data[1];\n            let name = data.slice(2, 2 + nameLength).toString();\n            let versionLength = data[2 + nameLength];\n            let version = data.slice(3 + nameLength, 3 + nameLength + versionLength).toString();\n            return { name, version };\n        });\n    }\n    async isAppOpen() {\n        return (await this.#getCurrentApp()).name === 'TON';\n    }\n    async getVersion() {\n        let loaded = await this.#doRequest(INS_VERSION, 0x00, 0x00, Buffer.alloc(0));\n        const [major, minor, patch] = loaded;\n        return `${major}.${minor}.${patch}`;\n    }\n    //\n    // Operations\n    //\n    async getAddress(path, opts) {\n        // Check path\n        validatePath(path);\n        // Resolve flags\n        const { bounceable, testOnly, chain, specifiers } = processAddressFlags(opts);\n        // Get public key\n        let response = await this.#doRequest(INS_ADDRESS, 0x00, 0x00, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        if (response.length !== 32) {\n            throw Error('Invalid response');\n        }\n        // Contract\n        const contract = (0, getInit_1.getInit)(response, specifiers?.subwalletId ?? 698983191, specifiers?.isV3R2 ?? false);\n        const address = (0, core_1.contractAddress)(chain, contract);\n        return { address: address.toString({ bounceable, testOnly }), publicKey: response };\n    }\n    async validateAddress(path, opts) {\n        // Check path\n        validatePath(path);\n        // Resolve flags\n        const { bounceable, testOnly, chain, flags, specifiers } = processAddressFlags(opts);\n        let r = pathElementsToBuffer(path.map((v) => v + 0x80000000));\n        if (specifiers !== undefined) {\n            r = Buffer.concat([r, (0, ledgerWriter_1.writeUint8)(specifiers.isV3R2 ? 1 : 0), (0, ledgerWriter_1.writeUint32)(specifiers.subwalletId)]);\n        }\n        // Get public key\n        let response = await this.#doRequest(INS_ADDRESS, 0x01, flags, r);\n        if (response.length !== 32) {\n            throw Error('Invalid response');\n        }\n        // Contract\n        const contract = (0, getInit_1.getInit)(response, specifiers?.subwalletId ?? 698983191, specifiers?.isV3R2 ?? false);\n        const address = (0, core_1.contractAddress)(chain, contract);\n        return { address: address.toString({ bounceable, testOnly }), publicKey: response };\n    }\n    async getAddressProof(path, params, opts) {\n        // Check path\n        validatePath(path);\n        let publicKey = (await this.getAddress(path)).publicKey;\n        // Resolve flags\n        const { flags, specifiers } = processAddressFlags(opts);\n        let specifiersBuf = Buffer.alloc(0);\n        if (specifiers !== undefined) {\n            specifiersBuf = Buffer.concat([(0, ledgerWriter_1.writeUint8)(specifiers.isV3R2 ? 1 : 0), (0, ledgerWriter_1.writeUint32)(specifiers.subwalletId)]);\n        }\n        const domainBuf = Buffer.from(params.domain, 'utf-8');\n        const reqBuf = Buffer.concat([\n            pathElementsToBuffer(path.map((v) => v + 0x80000000)),\n            specifiersBuf,\n            (0, ledgerWriter_1.writeUint8)(domainBuf.length),\n            domainBuf,\n            (0, ledgerWriter_1.writeUint64)(BigInt(params.timestamp)),\n            params.payload,\n        ]);\n        // Get public key\n        let res = await this.#doRequest(INS_PROOF, 0x01, flags, reqBuf);\n        let signature = res.slice(1, 1 + 64);\n        let hash = res.slice(2 + 64, 2 + 64 + 32);\n        if (!(0, crypto_1.signVerify)(hash, signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        return { signature, hash };\n    }\n    async signData(path, req, opts) {\n        validatePath(path);\n        const publicKey = (await this.getAddress(path)).publicKey;\n        const timestamp = opts?.timestamp ?? Math.floor(Date.now() / 1000);\n        let schema;\n        let data;\n        let cell;\n        switch (req.type) {\n            case 'plaintext': {\n                schema = 0x754bf91b;\n                data = Buffer.from(req.text, 'ascii');\n                cell = (0, core_1.beginCell)().storeStringTail(req.text).endCell();\n                break;\n            }\n            case 'app-data': {\n                if (req.address === undefined && req.domain === undefined) {\n                    throw new Error('At least one of `address` and `domain` must be set when using \\'app-data\\' request');\n                }\n                schema = 0x54b58535;\n                let b = (0, core_1.beginCell)();\n                let dp = [];\n                if (req.address !== undefined) {\n                    b.storeBit(1);\n                    b.storeAddress(req.address);\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeAddress)(req.address));\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                if (req.domain !== undefined) {\n                    b.storeBit(1);\n                    let inner = (0, core_1.beginCell)();\n                    req.domain.split('.').reverse().forEach(p => {\n                        inner.storeBuffer(Buffer.from(p, 'ascii'));\n                        inner.storeUint(0, 8);\n                    });\n                    b.storeRef(inner);\n                    const db = Buffer.from(req.domain, 'ascii');\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint8)(db.length), db);\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                b.storeRef(req.data);\n                dp.push((0, ledgerWriter_1.writeCellRef)(req.data));\n                if (req.ext !== undefined) {\n                    b.storeBit(1);\n                    b.storeRef(req.ext);\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(req.ext));\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                data = Buffer.concat(dp);\n                cell = b.endCell();\n                break;\n            }\n            default: {\n                throw new Error(`Sign data request type '${req.type}' not supported`);\n            }\n        }\n        const commonPart = Buffer.concat([\n            (0, ledgerWriter_1.writeUint32)(schema),\n            (0, ledgerWriter_1.writeUint64)(BigInt(timestamp)),\n        ]);\n        const pkg = Buffer.concat([\n            commonPart,\n            data,\n        ]);\n        await this.#doRequest(INS_SIGN_DATA, 0x00, 0x03, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        const pkgCs = chunks(pkg, 255);\n        for (let i = 0; i < pkgCs.length - 1; i++) {\n            await this.#doRequest(INS_SIGN_DATA, 0x00, 0x02, pkgCs[i]);\n        }\n        const res = await this.#doRequest(INS_SIGN_DATA, 0x00, 0x00, pkgCs[pkgCs.length - 1]);\n        let signature = res.subarray(1, 1 + 64);\n        let hash = res.subarray(2 + 64, 2 + 64 + 32);\n        if (!hash.equals(cell.hash())) {\n            throw Error('Hash mismatch. Expected: ' + cell.hash().toString('hex') + ', got: ' + hash.toString('hex'));\n        }\n        if (!(0, crypto_1.signVerify)(Buffer.concat([commonPart, hash]), signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        return {\n            signature,\n            cell,\n            timestamp,\n        };\n    }\n    signTransaction = async (path, transaction) => {\n        // Check path\n        validatePath(path);\n        //\n        // Fetch key\n        //\n        let publicKey = (await this.getAddress(path)).publicKey;\n        //\n        // Create package\n        //\n        let pkg = Buffer.concat([\n            (0, ledgerWriter_1.writeUint8)(transaction.walletSpecifiers === undefined ? 0 : 1), // tag\n        ]);\n        if (transaction.walletSpecifiers !== undefined) {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint32)(transaction.walletSpecifiers.subwalletId ?? DEFAULT_SUBWALLET_ID),\n                (0, ledgerWriter_1.writeUint8)(transaction.walletSpecifiers.includeWalletOp ? 1 : 0),\n            ]);\n        }\n        pkg = Buffer.concat([\n            pkg,\n            (0, ledgerWriter_1.writeUint32)(transaction.seqno),\n            (0, ledgerWriter_1.writeUint32)(transaction.timeout),\n            (0, ledgerWriter_1.writeVarUInt)(transaction.amount),\n            (0, ledgerWriter_1.writeAddress)(transaction.to),\n            (0, ledgerWriter_1.writeUint8)(transaction.bounce ? 1 : 0),\n            (0, ledgerWriter_1.writeUint8)(transaction.sendMode),\n        ]);\n        //\n        // State init\n        //\n        let stateInit = null;\n        if (transaction.stateInit) {\n            stateInit = (0, core_1.beginCell)()\n                .store((0, core_1.storeStateInit)(transaction.stateInit))\n                .endCell();\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint16)(stateInit.depth()),\n                stateInit.hash()\n            ]);\n        }\n        else {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(0)\n            ]);\n        }\n        //\n        // Payload\n        //\n        const { payload, hints } = convertPayload(transaction.payload);\n        if (payload) {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint16)(payload.depth()),\n                payload.hash(),\n                hints\n            ]);\n        }\n        else {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(0),\n                (0, ledgerWriter_1.writeUint8)(0)\n            ]);\n        }\n        //\n        // Send package\n        //\n        await this.#doRequest(INS_SIGN_TX, 0x00, 0x03, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        const pkgCs = chunks(pkg, 255);\n        for (let i = 0; i < pkgCs.length - 1; i++) {\n            await this.#doRequest(INS_SIGN_TX, 0x00, 0x02, pkgCs[i]);\n        }\n        let res = await this.#doRequest(INS_SIGN_TX, 0x00, 0x00, pkgCs[pkgCs.length - 1]);\n        //\n        // Parse response\n        //\n        let orderBuilder = (0, core_1.beginCell)()\n            .storeBit(0)\n            .storeBit(true)\n            .storeBit(transaction.bounce)\n            .storeBit(false)\n            .storeAddress(null)\n            .storeAddress(transaction.to)\n            .storeCoins(transaction.amount)\n            .storeBit(false)\n            .storeCoins(0)\n            .storeCoins(0)\n            .storeUint(0, 64)\n            .storeUint(0, 32);\n        // State Init\n        if (stateInit) {\n            orderBuilder = orderBuilder\n                .storeBit(true)\n                .storeBit(true) // Always in reference\n                .storeRef(stateInit);\n        }\n        else {\n            orderBuilder = orderBuilder\n                .storeBit(false);\n        }\n        // Payload\n        if (payload) {\n            orderBuilder = orderBuilder\n                .storeBit(true) // Always in reference\n                .storeRef(payload);\n        }\n        else {\n            orderBuilder = orderBuilder\n                .storeBit(false);\n        }\n        // Transfer message\n        let transferB = (0, core_1.beginCell)()\n            .storeUint(transaction.walletSpecifiers?.subwalletId ?? DEFAULT_SUBWALLET_ID, 32)\n            .storeUint(transaction.timeout, 32)\n            .storeUint(transaction.seqno, 32);\n        if (transaction.walletSpecifiers?.includeWalletOp ?? true) {\n            transferB = transferB.storeUint(0, 8);\n        }\n        let transfer = transferB.storeUint(transaction.sendMode, 8)\n            .storeRef(orderBuilder.endCell())\n            .endCell();\n        // Parse result\n        let signature = res.slice(1, 1 + 64);\n        let hash = res.slice(2 + 64, 2 + 64 + 32);\n        if (!hash.equals(transfer.hash())) {\n            throw Error('Hash mismatch. Expected: ' + transfer.hash().toString('hex') + ', got: ' + hash.toString('hex'));\n        }\n        if (!(0, crypto_1.signVerify)(hash, signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        // Build a message\n        return (0, core_1.beginCell)()\n            .storeBuffer(signature)\n            .storeSlice(transfer.beginParse())\n            .endCell();\n    };\n    async getSettings() {\n        let loaded = await this.#doRequest(INS_SETTINGS, 0x00, 0x00, Buffer.alloc(0));\n        return {\n            blindSigningEnabled: (loaded[0] & 0x01) > 0,\n            expertMode: (loaded[0] & 0x02) > 0,\n        };\n    }\n    #doRequest = async (ins, p1, p2, data) => {\n        return this.#lock.inLock(async () => {\n            let r = await this.transport.send(LEDGER_CLA, ins, p1, p2, data);\n            return r.slice(0, r.length - 2);\n        });\n    };\n}\nexports.TonTransport = TonTransport;\n//\n// Utils\n//\nfunction validatePath(path) {\n    if (path.length < 6) {\n        throw Error('Path is too short');\n    }\n    if (path[0] !== 44) {\n        throw Error('First element of a path must be 44');\n    }\n    if (path[1] !== 607) {\n        throw Error('Second element of a path must be 607');\n    }\n    for (let p of path) {\n        if (p >= 0x80000000) {\n            throw Error('All path elements must be under 0x80000000');\n        }\n    }\n}\nfunction pathElementsToBuffer(paths) {\n    const buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n        buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return buffer;\n}\n"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","createBackoff","exponentialBackoffDelay","delay_1","currentFailureCount","minDelay","maxDelay","maxFailureCount","maxDelayRet","Math","max","round","random","opts","callback","undefined","onError","waitForRequest","delay","Transport","constructor","context","logType","exchangeTimeout","unresponsiveTimeout","deviceModel","_events","send","cla_1","ins_1","p1_1","p2_1","args_1","cla","ins","p1","p2","data","Buffer","alloc","statusList","StatusCodes","OK","abortTimeoutMs","tracer","withUpdatedContext","function","length","trace","dataLength","TransportError","response","exchange","concat","from","sw","readUInt16BE","some","s","TransportStatusError","_appAPIlock","LocalTracer","_apdu","_abortTimeoutMs","Error","exchangeBulk","apdus","observer","unsubscribed","apdu","r","status","main","complete","error","unsubscribe","setScrambleKey","_key","close","on","eventName","cb","off","removeListener","emit","event","args","setDebugMode","console","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","found","sub","listen","listenTimeoutId","clearTimeout","open","descriptor","ErrorMessage_NoDeviceFound","setTimeout","ErrorMessage_ListenTimeout","exchangeAtomicImpl","f","exchangeBusyPromise","TransportRaceCondition","resolveBusy","busyPromise","unresponsiveReached","timeout","res","decorateAppAPIMethods","self","methods","scrambleKey","methodName","decorateAppAPIMethod","ctx","setTraceContext","withContext","updateTraceContext","contextToAdd","updateContext","getTraceContext","getContext","ms","minimumDelay","src","start","Date","now","d","asyncTimeout","timer","abort","err","catch","writeCellInline","writeCellRef","writeAddress","writeUint8","writeVarUInt","writeUint64","writeUint48","writeUint16","writeUint32","core_1","b","writeUint16BE","writeUint32BE","beginCell","storeUint","endCell","beginParse","loadBuffer","sizeBytes","ceil","toString","address","workChain","hash","ref","depth","bytes","InvalidateSync","backoff_1","command","_invalidated","_invalidatedDouble","_stopped","_doSync","_backoff","_command","backoff","invalidate","stop","BoundedConcurrencyPool","UnboundedConcurrencyPool","Queue","SyncValue","AsyncLock","createAsyncIterator","createAsyncIterator_1","enumerable","get","AsyncLock_1","InvalidateSync_1","SyncValue_1","Queue_1","ConcurrencyPool_1","asyncTimeout_1","q","awaiters","push","item","shift","resolver","getOptional","isEmpty","permits","promiseResolverQueue","inLock","func","lock","unlock","nextResolver","getInit","publicKey","subwalletId","isV3R2","storeBuffer","code","Cell","fromBase64","storeBit","initial","updater","_value","_updater","_sync","v","is","onExit","events","resolvers","onReturn","Symbol","asyncIterator","val","return","throw","_BoundedConcurrencyPool_inFlight","__classPrivateFieldGet","receiver","state","kind","TypeError","has","call","__classPrivateFieldSet","set","run","concurrencyFactor","pending","_a","_b","p","inFlight","inQueue","WeakMap","TonTransport","parseMessage","KNOWN_JETTONS","crypto_1","teslabot_1","ledgerWriter_1","getInit_1","DEFAULT_SUBWALLET_ID","symbol","masterAddress","Address","parse","dnsWalletKey","normalizeQueryId","qid","chunks","buf","n","nc","cs","i","subarray","processAddressFlags","bounceable","testOnly","chain","walletVersion","specifiers","flags","validatePath","path","pathElementsToBuffer","paths","buffer","forEach","element","index","writeUInt32BE","cell","params","disallowUnsafe","disallowModification","encodeJettonBurnEthAddressAsHex","equals","op","loadUint","str","loadStringTail","endParse","c","charCodeAt","type","text","queryId","loadUintBig","amount","loadCoins","destination","loadAddress","responseDestination","customPayload","loadMaybeRef","forwardAmount","forwardPayload","loadBit","loadRef","asCell","knownJetton","newOwner","bits","refs","appId","remainingBits","votingAddress","expirationDate","vote","needConfirmation","key","remainingRefs","vs","capabilities","isWallet","record","swapId","message","transport","async","slice","nameLength","name","versionLength","version","isAppOpen","getVersion","loaded","major","minor","patch","getAddress","map","contract","contractAddress","validateAddress","getAddressProof","specifiersBuf","domainBuf","domain","reqBuf","BigInt","timestamp","payload","signature","signVerify","signData","req","floor","schema","storeStringTail","dp","storeAddress","inner","split","reverse","storeRef","db","ext","commonPart","pkg","pkgCs","signTransaction","transaction","walletSpecifiers","includeWalletOp","seqno","to","bounce","sendMode","stateInit","store","storeStateInit","hints","input","jettonId","workchain","storeCoins","storeMaybeRef","sha256_sync","rb","convertPayload","orderBuilder","transferB","transfer","storeSlice","getSettings","blindSigningEnabled","expertMode"],"sourceRoot":""}